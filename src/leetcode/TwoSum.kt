package leetcode

fun main() {
    val nums = intArrayOf(3,3)
    val numsUseCase = intArrayOf(-270500,3949710,9897445,-2392381,-2486052,-9005702,-3761504,-2950909,1469211,-9170275,2464141,-9357669,-9632690,-4512985,3481280,-7114427,-9174133,-8784809,6243519,-5159651,7036432,8894878,9050690,4774430,-3357138,5222633,4158687,3648605,1986937,-9650676,3976738,9041523,2066842,-4794781,-87160,-1705203,5978164,-7552128,-1453206,-6244321,7910012,-4616820,5296614,-3106054,7715501,-810175,-5334982,1520947,7270144,-9101043,-4896324,6131798,-5029261,-5743456,3837670,-2376616,-5238665,-920215,2364964,3561110,-1285370,6632794,2020652,-6669267,9917191,944757,-3107223,-8561420,-3193207,-1768996,-1901559,-5848159,-5257514,9043639,-5603055,9887434,1114405,-9156325,3840651,6893796,302203,-8984569,8680571,-11294,9836611,-3137463,-179422,-8194192,9597324,-2087394,-9225266,3887925,4817212,-5159612,3515800,-3617718,8324560,1890152,-8786747,-3640162,7376546,-6958400,9042094,7443256,-1742287,5972123,-3595482,7791171,6628499,2791205,-5232179,4361732,-1257292,3999020,4148146,3695741,-3873684,1280623,876224,9169532,-9877952,-3766683,7114789,8540184,367724,9220094,3588796,1539591,-8520440,984621,-5070725,-3749850,-6329722,-4019050,-4717275,-1452766,5402007,7252809,-5193864,3450288,2316444,5511160,4056778,-5005784,2999040,-3613600,-9905677,9310405,6212308,8217506,-9052313,4725641,-976385,6676311,5028167,-6459664,-4450031,7895096,-6868132,-5360780,2490985,-8917864,-5411836,-6284353,2187258,1735766,1671693,2712816,-3767429,964035,3217231,9453809,9287139,-6028181,3168936,-5333822,-3620623,8408044,-2388620,124424,-1764860,-5514078,4334554,-3795417,8467589,-4211977,4483997,-9301006,4252175,-3605511,3331491,3918345,-6414067,9024683,6278010,2412913,6294966,8336326,-6101144,-5558169,7151655,2322092,7548912,-9535378,8879035,-4413230,-3921409,-2057766,5645549,-4717829,-9151019,3588718,6947744,-1879486,-5127860,770823,22220,-4485919,-1177476,-3956543,256387,7726351,7934734,2160061,1330346,-3446358,-261264,-5533642,9700245,-7044119,9515778,9970947,2890428,-1251113,-4390534,4960326,4362804,-4843716,-3523441,4845882,-101426,9348007,-4999230,-1893298,-9731971,2860988,-5563823,7225994,-4826561,-1101737,2989809,-3634790,8106512,1966501,7692107,-1745077,5789959,7539575,8138422,-9944767,7153587,4022750,8541767,1574589,2644248,-7495577,-378139,-5143277,-5322908,-3523657,-3181464,909433,-8600643,-1706172,-5183098,4828456,-2468855,-468204,-2079493,-7983558,1987856,-5514893,-4027004,-6541164,1871733,1669870,-8576374,9872933,4974761,6709858,3053149,6833,4413998,-5982188,-4182967,7067844,9672703,-9663534,3699696,-889743,5663244,-9981112,1760419,-7380572,2381072,6434445,3751156,1282906,361905,-2674480,6790529,-229452,-2704210,-7892599,-7726116,7586624,-3364081,7347810,-4428653,7665221,-8787207,4692485,-2523416,7849857,6810384,768650,-6094159,2772620,-4619637,-8332593,-7908284,-5397206,4183962,709430,-5052569,3121305,839331,2118455,3530058,-3793350,-6114172,-5713777,4405151,-5873999,9946185,-6899691,2085960,4958651,-9123477,5130562,-7403893,5800827,-2925374,6681746,4181632,-1274294,-3336507,3873165,-4193321,8550828,2571898,-2292852,4119985,928815,613815,2810492,-8197020,6383672,-7938735,6481625,-3271428,1677032,-8642840,-8319101,-6212305,-3211153,1588910,-6530518,1936150,-299515,-1935337,4432709,-252431,9440170,-7326984,-8341464,-7816757,7060046,7765545,8203043,9375290,5864787,-1679956,259608,9923062,8607188,2196336,2732943,-5648131,3980091,-7867923,-3992913,5975966,8422916,-8282822,9187754,-7125781,-2789370,3759578,-7825446,4298058,-3070303,-8592468,-1002372,-523688,3329365,8990870,6528263,-3668038,-6627012,-1252718,-1625567,-2173151,8515213,-6256527,-6608758,9910825,-5695987,-5471987,-3272537,9586976,7214026,-5335817,425004,1274455,5193995,1467733,-9972675,1096764,9434809,4434911,4323826,5695666,6900331,3418235,-2584200,-1394437,-9765840,-8167255,3890721,8261159,-7245371,6441743,6341408,2296125,-2701048,4674584,1740437,1588390,1947082,-9724772,2995832,-4317806,-3407045,9689175,-7466222,1485074,6099739,-8486654,8903253,-6768570,-3003984,-7073875,8259578,91323,3406045,-3481400,-3283222,-3399255,-717382,9144919,-7272624,71467,9948956,-5923559,-1768604,-4792653,-9584805,-3613630,-3445195,-550115,3368913,-98150,-3872723,-9619160,2762071,-6158606,7238416,1349835,4090659,6298942,3791502,-2244278,8190791,-4432673,9133855,-8995429,-3887301,5750056,6185233,4982144,-1473613,6781132,-5238013,9160914,2930057,8614467,-3663771,4605864,7787701,3855183,-2162907,7967694,-1842971,4327056,7978253,6553327,7551982,6322251,-5717543)
    println("output = ${twoSum2(nums = numsUseCase, target = 3679210).contentToString()}")
}

// nums = [2,7,11,15], target = 9 , Output = [0,1]
fun twoSum(nums: IntArray, target: Int): IntArray {
    var sum = 0
    val output = intArrayOf(0, 1)
    nums.forEachIndexed { index, num ->
        for ((nestedIndex, nestedNumber) in nums.indices.drop(index + 1).withIndex()) {
            sum = num + nestedNumber
            if (sum == target) {
                output[0] = index
                output[1] = nestedIndex
            }
        }
    }

    return output
}

fun twoSum2(nums: IntArray, target: Int): IntArray {
    var sum = 0
    val result = intArrayOf(0,0)

    for (i in nums.indices) {
        for (j in i+1..< nums.size) {
            sum = nums[i]+ nums[j]
            println("Sum : $sum")
            if (sum == target) {
                result[0] = i
                result[1] = j
                break
            }
        }
    }

    return result
}

// [1,2,7,0] target = 9 output = [1,2]

// Start from 1st iteration on 0 index
// 1st [0, 1] sum = 3
// 2nd [0, 2] sum = 8
// 3rd [0, 3] sum = 1

// Start from 1 index
// 1st [1,2] sum = 9 We got the target! break the loop and return value